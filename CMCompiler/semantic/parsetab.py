
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ANNOTATION EE ELSE GE ID IF INT LE NE NUM RETURN VOID WHILEprogram : declaration_listdeclaration_list : declaration_list declarationdeclaration_list : declarationdeclaration : var_declarationdeclaration : fun_declarationvar_declaration : type_specifier ID ';' var_declaration : type_specifier ID '[' NUM ']' ';' type_specifier : INTtype_specifier : VOIDfun_declaration : type_specifier ID '(' params ')' fun_declaration : compound_stmtparams : param_listparams : VOIDparams : param_list : param_list ',' paramparam_list : paramparam : type_specifier IDparam : type_specifier ID '[' ']' compound_stmt : '{' E1 local_declarations statement_list '}'  E1 : local_declarations : local_declarations var_declarationlocal_declarations : statement_list : statement_list statementstatement_list : statement : expression_stmtstatement : compound_stmtstatement : selection_stmtstatement : iteration_stmtstatement : return_stmtexpression_stmt : expression ';' expression_stmt : ';' selection_stmt : IF '(' expression ')' M statement Nselection_stmt : IF '(' expression ')' M statement N ELSE M statement MM :N :iteration_stmt : WHILE M '(' expression ')' M statement Mreturn_stmt : RETURN ';' return_stmt : RETURN expression ';' expression : var '=' expressionexpression : simple_expression var : ID var : ID '[' expression ']' simple_expression : additive_expression relop additive_expressionsimple_expression : additive_expressionrelop : LErelop : '<' relop : '>' relop : GErelop : EErelop : NEadditive_expression : additive_expression addop termadditive_expression : termaddop : '+' addop : '-' term : term mulop factorterm : factor mulop : '*'  mulop : '/' factor : '(' expression ')' factor : varfactor : callfactor : NUM call : ID '(' args ')' args : arg_listargs :  arg_list : arg_list ',' expression arg_list : expression"
    
_lr_action_items = {'INT':([0,2,3,4,5,7,10,11,13,14,16,17,25,29,30,31,53,],[8,8,-3,-4,-5,-11,-20,-2,-22,-6,8,8,-21,-10,8,-19,-7,]),'VOID':([0,2,3,4,5,7,10,11,13,14,16,17,25,29,30,31,53,],[9,9,-3,-4,-5,-11,-20,-2,-22,-6,22,9,-21,-10,9,-19,-7,]),'{':([0,2,3,4,5,7,10,11,13,14,17,24,25,29,31,32,33,34,35,36,37,39,53,56,60,82,92,97,98,100,101,102,103,104,105,106,107,108,],[10,10,-3,-4,-5,-11,-20,-2,-22,-6,-24,10,-21,-10,-19,-23,-25,-26,-27,-28,-29,-31,-7,-30,-37,-38,-34,10,-34,-35,10,-32,-34,-34,-36,10,-34,-33,]),'$end':([1,2,3,4,5,7,11,14,29,31,53,],[0,-1,-3,-4,-5,-11,-2,-6,-10,-19,-7,]),'ID':([6,8,9,10,13,14,17,19,22,24,25,26,31,32,33,34,35,36,37,39,41,43,53,56,57,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,81,82,92,96,97,98,100,101,102,103,104,105,106,107,108,],[12,-8,-9,-20,-22,-6,-24,28,-9,46,-21,52,-19,-23,-25,-26,-27,-28,-29,-31,46,46,-7,-30,46,-37,46,46,46,46,46,-45,-46,-47,-48,-49,-50,-53,-54,46,-57,-58,46,-38,-34,46,46,-34,-35,46,-32,-34,-34,-36,46,-34,-33,]),'}':([10,13,14,17,24,25,31,32,33,34,35,36,37,39,53,56,60,82,100,102,103,105,107,108,],[-20,-22,-6,-24,31,-21,-19,-23,-25,-26,-27,-28,-29,-31,-7,-30,-37,-38,-35,-32,-34,-36,-34,-33,]),';':([10,12,13,14,17,24,25,27,31,32,33,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,52,53,56,60,61,80,82,83,88,89,90,91,92,94,95,97,98,100,101,102,103,104,105,106,107,108,],[-20,14,-22,-6,-24,39,-21,53,-19,-23,-25,-26,-27,-28,-29,56,-31,60,-60,-40,-41,-44,-52,-56,-61,-62,14,-7,-30,-37,82,-59,-38,-39,-43,-60,-51,-55,-34,-42,-63,39,-34,-35,39,-32,-34,-34,-36,39,-34,-33,]),'IF':([10,13,14,17,24,25,31,32,33,34,35,36,37,39,53,56,60,82,92,97,98,100,101,102,103,104,105,106,107,108,],[-20,-22,-6,-24,40,-21,-19,-23,-25,-26,-27,-28,-29,-31,-7,-30,-37,-38,-34,40,-34,-35,40,-32,-34,-34,-36,40,-34,-33,]),'WHILE':([10,13,14,17,24,25,31,32,33,34,35,36,37,39,53,56,60,82,92,97,98,100,101,102,103,104,105,106,107,108,],[-20,-22,-6,-24,42,-21,-19,-23,-25,-26,-27,-28,-29,-31,-7,-30,-37,-38,-34,42,-34,-35,42,-32,-34,-34,-36,42,-34,-33,]),'RETURN':([10,13,14,17,24,25,31,32,33,34,35,36,37,39,53,56,60,82,92,97,98,100,101,102,103,104,105,106,107,108,],[-20,-22,-6,-24,43,-21,-19,-23,-25,-26,-27,-28,-29,-31,-7,-30,-37,-38,-34,43,-34,-35,43,-32,-34,-34,-36,43,-34,-33,]),'(':([10,12,13,14,17,24,25,31,32,33,34,35,36,37,39,40,41,42,43,46,53,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,81,82,92,96,97,98,100,101,102,103,104,105,106,107,108,],[-20,16,-22,-6,-24,41,-21,-19,-23,-25,-26,-27,-28,-29,-31,57,41,-34,41,64,-7,-30,41,81,-37,41,41,41,41,41,-45,-46,-47,-48,-49,-50,-53,-54,41,-57,-58,41,-38,-34,41,41,-34,-35,41,-32,-34,-34,-36,41,-34,-33,]),'NUM':([10,13,14,15,17,24,25,31,32,33,34,35,36,37,39,41,43,53,56,57,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,81,82,92,96,97,98,100,101,102,103,104,105,106,107,108,],[-20,-22,-6,18,-24,51,-21,-19,-23,-25,-26,-27,-28,-29,-31,51,51,-7,-30,51,-37,51,51,51,51,51,-45,-46,-47,-48,-49,-50,-53,-54,51,-57,-58,51,-38,-34,51,51,-34,-35,51,-32,-34,-34,-36,51,-34,-33,]),'[':([12,28,46,52,],[15,54,63,15,]),')':([16,20,21,22,23,28,44,45,46,47,48,49,50,51,55,58,64,78,79,80,83,85,86,87,88,89,90,91,93,94,95,99,],[-14,29,-12,-13,-16,-17,-60,-40,-41,-44,-52,-56,-61,-62,-15,80,-65,-18,92,-59,-39,95,-64,-67,-43,-60,-51,-55,98,-42,-63,-66,]),']':([18,44,45,46,47,48,49,50,51,54,80,83,84,88,89,90,91,94,95,],[27,-60,-40,-41,-44,-52,-56,-61,-62,78,-59,-39,94,-43,-60,-51,-55,-42,-63,]),',':([21,23,28,44,45,46,47,48,49,50,51,55,78,80,83,86,87,88,89,90,91,94,95,99,],[30,-16,-17,-60,-40,-41,-44,-52,-56,-61,-62,-15,-18,-59,-39,96,-67,-43,-60,-51,-55,-42,-63,-66,]),'ELSE':([31,33,34,35,36,37,39,56,60,82,100,102,103,105,107,108,],[-19,-25,-26,-27,-28,-29,-31,-30,-37,-38,-35,104,-34,-36,-34,-33,]),'=':([44,46,94,],[62,-41,-42,]),'*':([44,46,48,49,50,51,80,89,90,91,94,95,],[-60,-41,76,-56,-61,-62,-59,-60,76,-55,-42,-63,]),'/':([44,46,48,49,50,51,80,89,90,91,94,95,],[-60,-41,77,-56,-61,-62,-59,-60,77,-55,-42,-63,]),'LE':([44,46,47,48,49,50,51,80,89,90,91,94,95,],[-60,-41,67,-52,-56,-61,-62,-59,-60,-51,-55,-42,-63,]),'<':([44,46,47,48,49,50,51,80,89,90,91,94,95,],[-60,-41,68,-52,-56,-61,-62,-59,-60,-51,-55,-42,-63,]),'>':([44,46,47,48,49,50,51,80,89,90,91,94,95,],[-60,-41,69,-52,-56,-61,-62,-59,-60,-51,-55,-42,-63,]),'GE':([44,46,47,48,49,50,51,80,89,90,91,94,95,],[-60,-41,70,-52,-56,-61,-62,-59,-60,-51,-55,-42,-63,]),'EE':([44,46,47,48,49,50,51,80,89,90,91,94,95,],[-60,-41,71,-52,-56,-61,-62,-59,-60,-51,-55,-42,-63,]),'NE':([44,46,47,48,49,50,51,80,89,90,91,94,95,],[-60,-41,72,-52,-56,-61,-62,-59,-60,-51,-55,-42,-63,]),'+':([44,46,47,48,49,50,51,80,88,89,90,91,94,95,],[-60,-41,73,-52,-56,-61,-62,-59,73,-60,-51,-55,-42,-63,]),'-':([44,46,47,48,49,50,51,80,88,89,90,91,94,95,],[-60,-41,74,-52,-56,-61,-62,-59,74,-60,-51,-55,-42,-63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'declaration':([0,2,],[3,11,]),'var_declaration':([0,2,17,],[4,4,25,]),'fun_declaration':([0,2,],[5,5,]),'type_specifier':([0,2,16,17,30,],[6,6,19,26,19,]),'compound_stmt':([0,2,24,97,101,106,],[7,7,34,34,34,34,]),'E1':([10,],[13,]),'local_declarations':([13,],[17,]),'params':([16,],[20,]),'param_list':([16,],[21,]),'param':([16,30,],[23,55,]),'statement_list':([17,],[24,]),'statement':([24,97,101,106,],[32,100,103,107,]),'expression_stmt':([24,97,101,106,],[33,33,33,33,]),'selection_stmt':([24,97,101,106,],[35,35,35,35,]),'iteration_stmt':([24,97,101,106,],[36,36,36,36,]),'return_stmt':([24,97,101,106,],[37,37,37,37,]),'expression':([24,41,43,57,62,63,64,81,96,97,101,106,],[38,58,61,79,83,84,87,93,99,38,38,38,]),'var':([24,41,43,57,62,63,64,65,66,75,81,96,97,101,106,],[44,44,44,44,44,44,44,89,89,89,44,44,44,44,44,]),'simple_expression':([24,41,43,57,62,63,64,81,96,97,101,106,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'additive_expression':([24,41,43,57,62,63,64,65,81,96,97,101,106,],[47,47,47,47,47,47,47,88,47,47,47,47,47,]),'term':([24,41,43,57,62,63,64,65,66,81,96,97,101,106,],[48,48,48,48,48,48,48,48,90,48,48,48,48,48,]),'factor':([24,41,43,57,62,63,64,65,66,75,81,96,97,101,106,],[49,49,49,49,49,49,49,49,49,91,49,49,49,49,49,]),'call':([24,41,43,57,62,63,64,65,66,75,81,96,97,101,106,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'M':([42,92,98,103,104,107,],[59,97,101,105,106,108,]),'relop':([47,],[65,]),'addop':([47,88,],[66,66,]),'mulop':([48,90,],[75,75,]),'args':([64,],[85,]),'arg_list':([64,],[86,]),'N':([100,],[102,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program_1','sematic.py',126),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_1','sematic.py',130),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','sematic.py',132),
  ('declaration -> var_declaration','declaration',1,'p_declaration_1','sematic.py',136),
  ('declaration -> fun_declaration','declaration',1,'p_declaration_2','sematic.py',140),
  ('var_declaration -> type_specifier ID ;','var_declaration',3,'p_var_declaration_1','sematic.py',147),
  ('var_declaration -> type_specifier ID [ NUM ] ;','var_declaration',6,'p_var_declaration_2','sematic.py',152),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_1','sematic.py',156),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_2','sematic.py',159),
  ('fun_declaration -> type_specifier ID ( params )','fun_declaration',5,'p_fun_declaration_1','sematic.py',164),
  ('fun_declaration -> compound_stmt','fun_declaration',1,'p_fun_declaration_2','sematic.py',172),
  ('params -> param_list','params',1,'p_params_1','sematic.py',184),
  ('params -> VOID','params',1,'p_params_2','sematic.py',187),
  ('params -> <empty>','params',0,'p_params_empty','sematic.py',190),
  ('param_list -> param_list , param','param_list',3,'p_param_list_1','sematic.py',193),
  ('param_list -> param','param_list',1,'p_param_list_2','sematic.py',198),
  ('param -> type_specifier ID','param',2,'p_param_1','sematic.py',203),
  ('param -> type_specifier ID [ ]','param',4,'p_param_2','sematic.py',207),
  ('compound_stmt -> { E1 local_declarations statement_list }','compound_stmt',5,'p_compound_stmt_1','sematic.py',213),
  ('E1 -> <empty>','E1',0,'p_E1','sematic.py',225),
  ('local_declarations -> local_declarations var_declaration','local_declarations',2,'p_local_declarations_1','sematic.py',228),
  ('local_declarations -> <empty>','local_declarations',0,'p_local_declarations_empty','sematic.py',233),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','sematic.py',236),
  ('statement_list -> <empty>','statement_list',0,'p_statement_list_empty','sematic.py',240),
  ('statement -> expression_stmt','statement',1,'p_statement_1','sematic.py',244),
  ('statement -> compound_stmt','statement',1,'p_statement_2','sematic.py',248),
  ('statement -> selection_stmt','statement',1,'p_statement_3','sematic.py',252),
  ('statement -> iteration_stmt','statement',1,'p_statement_4','sematic.py',256),
  ('statement -> return_stmt','statement',1,'p_statement_5','sematic.py',260),
  ('expression_stmt -> expression ;','expression_stmt',2,'p_expression_stmt_1','sematic.py',271),
  ('expression_stmt -> ;','expression_stmt',1,'p_expression_stmt_2','sematic.py',275),
  ('selection_stmt -> IF ( expression ) M statement N','selection_stmt',7,'p_selection_stmt_1','sematic.py',279),
  ('selection_stmt -> IF ( expression ) M statement N ELSE M statement M','selection_stmt',11,'p_selection_stmt_2','sematic.py',291),
  ('M -> <empty>','M',0,'p_M','sematic.py',300),
  ('N -> <empty>','N',0,'p_N','sematic.py',304),
  ('iteration_stmt -> WHILE M ( expression ) M statement M','iteration_stmt',8,'p_iteration_stmt_1','sematic.py',310),
  ('return_stmt -> RETURN ;','return_stmt',2,'p_return_stmt_1','sematic.py',322),
  ('return_stmt -> RETURN expression ;','return_stmt',3,'p_return_stmt_2','sematic.py',325),
  ('expression -> var = expression','expression',3,'p_expression_1','sematic.py',330),
  ('expression -> simple_expression','expression',1,'p_expression_2','sematic.py',337),
  ('var -> ID','var',1,'p_var_1','sematic.py',343),
  ('var -> ID [ expression ]','var',4,'p_var_2','sematic.py',350),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression_1','sematic.py',362),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','sematic.py',371),
  ('relop -> LE','relop',1,'p_relop_1','sematic.py',379),
  ('relop -> <','relop',1,'p_relop_2','sematic.py',382),
  ('relop -> >','relop',1,'p_relop_3','sematic.py',385),
  ('relop -> GE','relop',1,'p_relop_4','sematic.py',388),
  ('relop -> EE','relop',1,'p_relop_5','sematic.py',391),
  ('relop -> NE','relop',1,'p_relop_6','sematic.py',394),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','sematic.py',399),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression_2','sematic.py',404),
  ('addop -> +','addop',1,'p_addop_1','sematic.py',409),
  ('addop -> -','addop',1,'p_addop_2','sematic.py',413),
  ('term -> term mulop factor','term',3,'p_term_1','sematic.py',419),
  ('term -> factor','term',1,'p_term_2','sematic.py',425),
  ('mulop -> *','mulop',1,'p_mulop_1','sematic.py',430),
  ('mulop -> /','mulop',1,'p_mulop_2','sematic.py',434),
  ('factor -> ( expression )','factor',3,'p_factor_1','sematic.py',440),
  ('factor -> var','factor',1,'p_factor_2','sematic.py',445),
  ('factor -> call','factor',1,'p_factor_3','sematic.py',450),
  ('factor -> NUM','factor',1,'p_factor_4','sematic.py',454),
  ('call -> ID ( args )','call',4,'p_call_1','sematic.py',461),
  ('args -> arg_list','args',1,'p_args_1','sematic.py',473),
  ('args -> <empty>','args',0,'p_args_empty','sematic.py',476),
  ('arg_list -> arg_list , expression','arg_list',3,'p_arg_list_1','sematic.py',479),
  ('arg_list -> expression','arg_list',1,'p_arg_list_2','sematic.py',487),
]
